<?php

declare(strict_types=1);

namespace {{ namespace }};

use App\Support\ScoutSupport;
use Illuminate\Database\Eloquent\Builder;
use Tomchochola\Laratchi\Database\Model;
use Tomchochola\Laratchi\Http\JsonApi\JsonApiResource;
use Tomchochola\Laratchi\Http\JsonApi\ModelResource;
use Laravel\Scout\Searchable;

class {{ class }} extends Model
{
    use Searchable;

    /**
     * @inheritDoc
     *
     * @var array<mixed>
     */
    protected $casts = [];

    /**
     * Modify embed query.
     */
    public static function queryEmbed(Builder $builder): void
    {
        $builder->getQuery()->select($builder->qualifyColumns(['id', 'title', 'created_at', 'updated_at']));
    }

    /**
     * Search scope.
     */
    public static function scopeSearch(Builder $builder, string $search): void
    {
        if (resolveApp()->runningUnitTests()) {
            return;
        }

        ScoutSupport::exactPartial($builder, static::search($search));
    }

    /**
     * Title getter.
     */
    public function getTitle(): string
    {
        return $this->mustString('title');
    }

    /**
     * Embed resource.
     */
    public function embedResource(): JsonApiResource
    {
        return new ModelResource($this, static function (self $model): array {
            return [
                'title' => $model->getTitle(),
                'created_at' => $model->getCreatedAt(),
                'updated_at' => $model->getUpdatedAt(),
            ];
        });
    }

    /**
     * @inheritDoc
     *
     * @return array<string, ?string>
     */
    public function toSearchableArray(): array
    {
        return [
            'title' => $this->getTitle(),
        ];
    }
}
