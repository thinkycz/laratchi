<?php

declare(strict_types=1);

namespace {{ namespace }};

use Illuminate\Database\Eloquent\Builder;
use Illuminate\Http\Request;
use Laravel\Nova\Fields\ID;
use Laravel\Nova\Http\Requests\NovaRequest;

/**
 * @extends Resource<\{{ namespacedModel }}>
 */
class {{ class }} extends Resource
{
    /**
     * The model the resource corresponds to.
     *
     * @var class-string<\{{ namespacedModel }}>
     */
    public static string $model = \{{ namespacedModel }}::class;

    /**
     * @inheritDoc
     */
    public static $title = 'id';

    /**
     * @inheritDoc
     *
     * @var array<mixed>
     */
    public static $with = [];

    /**
     * @inheritDoc
     */
    public static function indexQuery(NovaRequest $request, mixed $query): Builder
    {
        $query->getQuery()->select($query->qualifyColumns(['id']));

        return $query;
    }

    /**
     * @inheritDoc
     */
    public static function detailQuery(NovaRequest $request, mixed $query): Builder
    {
        $query->getQuery()->select($query->qualifyColumns(['*']));

        return $query;
    }

    /**
     * @inheritDoc
     */
    public static function editQuery(NovaRequest $request, mixed $query): Builder
    {
        $query->getQuery()->select($query->qualifyColumns(['*']));

        return $query;
    }

    /**
     * @inheritDoc
     */
    public static function relatableQuery(NovaRequest $request, mixed $query): Builder
    {
        $query->getQuery()->select($query->qualifyColumns(['id']));

        return $query;
    }

    /**
     * @inheritDoc
     */
    public static function authorizedToCreate(Request $request): bool
    {
        return true;
    }

    /**
     * @inheritDoc
     *
     * @return array<mixed>
     */
    public function fields(NovaRequest $request): array
    {
        return [
            ID::make(),
        ];
    }

    /**
     * @inheritDoc
     */
    public function authorizedToView(Request $request): bool
    {
        return true;
    }

    /**
     * @inheritDoc
     */
    public function authorizedToUpdate(Request $request): bool
    {
        return true;
    }

    /**
     * @inheritDoc
     */
    public function authorizedToDelete(Request $request): bool
    {
        return true;
    }
}
