<?php

declare(strict_types=1);

namespace {{ namespace }};

use {{ namespacedValidity }};
use {{ namespacedUserModel }};
use {{ namespacedModel }};
use Illuminate\Auth\Access\Response;
use Tomchochola\Laratchi\Http\Requests\SecureFormRequest;

class {{ class }} extends SecureFormRequest
{
    /**
     * Resolve me.
     */
    public function resolveMe(): {{ userModel }}
    {
        return once(static fn (): {{ userModel }} => {{ userModel }}::mustResolve());
    }

    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): Response|bool
    {
        $this->resolveMe();

        return true;
    }

    /**
     * @inheritDoc
     */
    public function rules(): array
    {
        $validity = new {{ validity }}();

        return [
            'slug' => $validity->slug()->required(),
        ];
    }

    /**
     * Resolve model from slug.
     */
    public function resolve{{ model }}(): {{ model }}
    {
        return once(fn (): {{ model }} => {{ model }}::mustFindByRouteKey($this->varchar('slug'), null, function (): never {
            $this->throwSingleValidationException(['slug'], 'Exists');
        }));
    }
}
