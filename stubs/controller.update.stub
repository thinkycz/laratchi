<?php

declare(strict_types=1);

namespace {{ namespace }};

use {{ namespacedUpdateRequest }};
use {{ namespacedModel }};
use Symfony\Component\HttpFoundation\Response as SymfonyResponse;
use Tomchochola\Laratchi\Routing\TransactionController;

class {{ class }} extends TransactionController
{
    /**
     * Handle the incoming request.
     */
    public function __invoke({{ updateRequest }} $request): SymfonyResponse
    {
        $this->validateUnique($request);

        $model = $request->resolve{{ model }}();

        $model->update($request->validatedInput()->only(['title']));

        return resolveResponseFactory()->noContent();
    }

    /**
     * Validate given data is unique.
     */
    protected function validateUnique({{ updateRequest }} $request): void
    {
        if ($request->validatedInput()->has('title')) {
            $title = $request->validatedInput()->string('title');

            if ($title !== null) {
                [$hit] = $this->throttle($this->limit('title'), $this->onThrottle($request, ['title']));

                if ({{ model }}::query()->whereKeyNot($request->resolve{{ model }}()->getKey())->getQuery()->where('title', $title)->where('user_id', $request->me()->getKey())->exists()) {
                    $hit();
                    $request->throwUniqueValidationException(['title']);
                }
            }
        }
    }
}
